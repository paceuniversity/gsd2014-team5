package com.example.healthyeating.data;

import java.io.InputStream;

import com.example.healthyeating.R;

import android.graphics.AvoidXfermode.Mode;
import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.BitmapFactory;
import android.graphics.BitmapShader;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.drawable.BitmapDrawable;
import android.os.AsyncTask;
import android.util.Log;
import android.widget.ImageView;

public class ImageLoaderTask extends AsyncTask<String, Void, Bitmap>{
	ImageView recipeListViewImageView;
	
	  public ImageLoaderTask(ImageView input_recipeListViewImageView) {
	      this.recipeListViewImageView = input_recipeListViewImageView;
	  }

	  protected Bitmap doInBackground(String... urls) {
	      String urldisplay = urls[0];
	      Bitmap thumbNail = null;
	      try {
	        InputStream in = new java.net.URL(urldisplay).openStream();
	        thumbNail = BitmapFactory.decodeStream(in);
	      } catch (Exception e) {
	          Log.e("Error", e.getMessage());
	          e.printStackTrace();
	      }
	      return thumbNail;
	  }

	  protected void onPostExecute(Bitmap result) {
		  if(result!=null){
	      result = result.createScaledBitmap(result, 100, 100, true);
	      //result = roundCornered(result, 2);
	      
		  recipeListViewImageView.setImageBitmap(getRoundedCornerBitmap(result));
		  }else{
		  recipeListViewImageView.setImageResource(R.drawable.ic_launcher);
		  }		  
	  }
	  
	  public static Bitmap getRoundedCornerBitmap(Bitmap bitmap) {
		    Bitmap output = Bitmap.createBitmap(bitmap.getWidth(),
		        bitmap.getHeight(), Config.ARGB_8888);
		    Canvas canvas = new Canvas(output);
		 
		    Paint paint = new Paint();
		    
			canvas.drawColor(Color.GREEN);
 
           Bitmap b = Bitmap.createBitmap(200, 200, Bitmap.Config.ALPHA_8);
           Canvas c = new Canvas(b);
           RectF rectF = new RectF();
           rectF.set(5,5,150,150);
           canvas.drawBitmap(bitmap, 10,10, paint);
           canvas.drawRoundRect(rectF, 10, 10, paint);
 
            //paint.setColor(Color.RED);
 
           
		 
		    return output;
		  }


	}
