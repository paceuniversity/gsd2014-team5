package com.example.healthyeating.data;

import java.io.InputStream;

import com.example.healthyeating.R;

import android.graphics.AvoidXfermode.Mode;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.drawable.BitmapDrawable;
import android.os.AsyncTask;
import android.util.Log;
import android.widget.ImageView;

public class ImageLoaderTask extends AsyncTask<String, Void, Bitmap>{
	ImageView recipeListViewImageView;
	
	  public ImageLoaderTask(ImageView input_recipeListViewImageView) {
	      this.recipeListViewImageView = input_recipeListViewImageView;
	  }

	  protected Bitmap doInBackground(String... urls) {
	      String urldisplay = urls[0];
	      Bitmap thumbNail = null;
	      try {
	        InputStream in = new java.net.URL(urldisplay).openStream();
	        thumbNail = BitmapFactory.decodeStream(in);
	      } catch (Exception e) {
	          Log.e("Error", e.getMessage());
	          e.printStackTrace();
	      }
	      return thumbNail;
	  }

	  protected void onPostExecute(Bitmap result) {
		  if(result!=null){
	      result = result.createScaledBitmap(result, 100, 100, true);
	      //result = roundCornered(result, 2);
	      BitmapDrawable temp = new BitmapDrawable(result);
		  recipeListViewImageView.setImageDrawable(roundCornered(temp, 2));
		  }else{
		  recipeListViewImageView.setImageResource(R.drawable.ic_launcher);
		  }		  
	  }
	  
	  private BitmapDrawable roundCornered(BitmapDrawable scaledBitmap, int i) {

	        Bitmap bitmap = scaledBitmap.getBitmap();

	        Bitmap result = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(),
	                Bitmap.Config.ARGB_8888);
	        Canvas canvas = new Canvas(result);

	        int color = 0xff424242;
	        Paint paint = new Paint();
	        Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());
	        RectF rectF = new RectF(rect);
	        int roundPx = i;
	        paint.setAntiAlias(true);
	        canvas.drawARGB(0, 0, 0, 0);
	        paint.setColor(Color.BLUE);
	        canvas.drawRoundRect(rectF, roundPx, roundPx, paint);

	        
	        canvas.drawBitmap(bitmap, rect, rect, paint);
	        BitmapDrawable finalresult = new BitmapDrawable(result);
	   
	        return finalresult;
	    }
	}
