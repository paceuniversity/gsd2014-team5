package com.example.healthyeating.data;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;

import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.example.healthFacts.HealthFactItem;
import com.example.healthyeating.HomePage;
import com.example.healthyeating.R;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.AsyncTask;
import android.util.Log;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.TextView;

public class RetriveData extends AsyncTask<Void, Void, Void> {
	JsonParser Top5 = null;
	JSONObject temp = null;
	JSONObject healthFactObject;
	private Context context;
	private HomePage activity;
	ProgressDialog dialog;
	public RetriveData(){

	}
	
	
	public RetriveData(HomePage act){
		super();
		this.activity = act;
		this.context = activity.getApplicationContext();
	}
	
	
	@Override
	protected void onPreExecute() {
		
		dialog = new ProgressDialog(this.activity);
		dialog.setTitle("Loading");
		dialog.show();

		super.onPreExecute();
	}
	@Override
	protected Void doInBackground(Void... params) {
		healthFactObject = getJSONObject("http://turbotri.com/gsd2014team5/getHealthFacts.php");
		
		
		try {
			if(Top5==null){
			Top5 = new JsonParser(getJSONObject("http://turbotri.com/gsd2014team5/getContent.php"), activity.Recipes_Libary);
			}
			else{
				Top5 = Top5;
			}
			} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
			return null;
		
	}
	@Override
	protected void onPostExecute(Void result) {
		dialog.dismiss();
		try {
			ArrayList<HealthFactItem> listTemp = Top5.returnHealthFacts(healthFactObject);
			ArrayList<Bitmap> Bitmaptemp = new ArrayList<Bitmap>();
			
			for (int i = 0; i < listTemp.size(); i++) {
				String urldisplay = listTemp.get(i).getURL();
			      Bitmap thumbNail = null;
			      try {
			        InputStream in = new java.net.URL(urldisplay).openStream();
			        thumbNail = BitmapFactory.decodeStream(in);
			      } catch (Exception e) {
			          //Log.e("Error", e.getMessage());
			          //e.printStackTrace();
			      }
			      /*int width = activity.HealthFactsImageButton.getWidth();
				  int height = activity.HealthFactsImageButton.getHeight();
				  thumbNail = thumbNail.createScaledBitmap(thumbNail, width, height, true);
				  thumbNail = ImageLoaderTask.roundCorner(thumbNail, 20f);*/
				  Bitmaptemp.add(thumbNail);
			}
			activity.setUpHealthFactImages(Bitmaptemp);
			
		} catch (JSONException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		try {
			ArrayList<ArrayList<String>> t = Top5.getTop5();
			activity.populateTop20ListView(t.get(0), t.get(1), t.get(2), t.get(4));
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

	
	
	private JSONObject getJSONObject(String URL){
		JSONObject returnObj = null;
				//----This section of the code simple calls out to our server "http://turbotri.com/gsd2014team5Top5.json"
				//----Gets the jason file saved on the server
				//----Saves it as a string 
				//----And then turns it into a json object so we can easy parse through it
				
		HttpResponse response = null;
		DefaultHttpClient client = new DefaultHttpClient();
				HttpGet getRequest = new HttpGet(URL); //Creates the request to server asking for information 
				
				
				try {
						response = client.execute(getRequest); // Luanches the get request asking for the information
					} catch (ClientProtocolException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				
					StatusLine statusLine = response.getStatusLine(); //Gets the status line from TCP get response. Any thing but a 200 response is an error for example 404
					int statusCode = statusLine.getStatusCode();
					
					if(statusCode != 200){
						return null; //checks to see if there was any error returned in the satus line
					}
				
					InputStream jsonStream = null;
					try {
						jsonStream = response.getEntity().getContent(); 
					} catch (IllegalStateException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					BufferedReader reader = new BufferedReader(new InputStreamReader(jsonStream)); //Reads in the json stream of data from the json file on our server
					StringBuilder builder = new StringBuilder();
					String line;									// creates a string out of the input stream
					
				try {
					while((line = reader.readLine()) !=null){
							builder.append(line);
						}
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				String jsonData = builder.toString();
					
					 
					try {
						returnObj = new JSONObject(jsonData); 
						
					} catch (JSONException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					
					
		
		return returnObj;
	}
	

	
	
	
}
